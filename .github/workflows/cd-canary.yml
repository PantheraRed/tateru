name: 'CD: Canary'

on:
  push:
    branches: [develop]

jobs:
  gh-release:
    name: 'Release canary build to GitHub'
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [freebsd, linux, netbsd, openbsd]
        arch: [amd64, 386, arm, arm64, ppc64, ppc64le, mips, mipsle, mips64, mips64le]
        include:
          - os: darwin
            arch: amd64
          - os: dragonfly
            arch: amd64
          - os: dragonfly
            arch: 386
          - os: windows
            arch: 386
          - os: windows
            arch: amd64
          - os: solaris
            arch: amd64
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ssh-key: ${{ secrets.CANARY_DEPLOY }}
      - uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.CANARY_DEPLOY }}

      - name: Setup Git
        env:
          USE_SSH: true
          GIT_USER: ${{ secrets.GH_USER }}

        run: |
          git config --global user.email '${{ secrets.GH_EMAIL }}'
          git config --global user.name '${{ secrets.GH_USER }}'

      - name: Build Canary
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: |
          go build -o build/"$GOOS"-"$GOARCH"-tateru

      - name: Release Canary Build
        env:
          USE_SSH: true
          GIT_USER: ${{ secrets.GH_USER }}
        run: |
          cd ./build
          git init
          git remote add origin git@github.com:${{ secrets.GH_USER }}/tateru.git
          git checkout -b canary-builds
          git add --all

          if [[ $(git diff --stat --staged) != '' ]]; then
            git commit -m "Deploy canary - based on ${{ github.sha }}"
            git push --set-upstream origin canary-builds --force
          else
            echo "WD clean"
          fi
